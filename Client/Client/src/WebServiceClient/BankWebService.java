
package WebServiceClient;

import Data.*;
import WebServiceClient.XMLExceptions.FailedLoginException_Exception;
import WebServiceClient.XMLExceptions.RecordNotFoundException_Exception;
import WebServiceClient.XMLExceptions.TransferException_Exception;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "BankWebService", targetNamespace = "http://bank")
//@XmlSeeAlso({
//    ObjectFactory.class
//})
public interface BankWebService {


    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sayHelloWorldFrom", targetNamespace = "http://bank", className = "WebServiceClient.SayHelloWorldFrom")
    @ResponseWrapper(localName = "sayHelloWorldFromResponse", targetNamespace = "http://bank", className = "WebServiceClient.SayHelloWorldFromResponse")
    @Action(input = "http://bank/BankWebService/sayHelloWorldFromRequest", output = "http://bank/BankWebService/sayHelloWorldFromResponse")
    public String sayHelloWorldFrom(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "openAccount", targetNamespace = "http://bank", className = "WebServiceClient.OpenAccount")
    @ResponseWrapper(localName = "openAccountResponse", targetNamespace = "http://bank", className = "WebServiceClient.OpenAccountResponse")
    @Action(input = "http://bank/BankWebService/openAccountRequest", output = "http://bank/BankWebService/openAccountResponse")
    public int openAccount(
        @WebParam(name = "arg0", targetNamespace = "")
        Bank arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        String arg5);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns WebServiceClient.Customer
     * @throws FailedLoginException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCustomer", targetNamespace = "http://bank", className = "WebServiceClient.GetCustomer")
    @ResponseWrapper(localName = "getCustomerResponse", targetNamespace = "http://bank", className = "WebServiceClient.GetCustomerResponse")
    @Action(input = "http://bank/BankWebService/getCustomerRequest", output = "http://bank/BankWebService/getCustomerResponse", fault = {
        @FaultAction(className = FailedLoginException_Exception.class, value = "http://bank/BankWebService/getCustomer/Fault/FailedLoginException")
    })
    public Customer getCustomer(
        @WebParam(name = "arg0", targetNamespace = "")
        Bank arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2)
        throws FailedLoginException_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns WebServiceClient.Customer
     * @throws FailedLoginException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "signIn", targetNamespace = "http://bank", className = "WebServiceClient.SignIn")
    @ResponseWrapper(localName = "signInResponse", targetNamespace = "http://bank", className = "WebServiceClient.SignInResponse")
    @Action(input = "http://bank/BankWebService/signInRequest", output = "http://bank/BankWebService/signInResponse", fault = {
        @FaultAction(className = FailedLoginException_Exception.class, value = "http://bank/BankWebService/signIn/Fault/FailedLoginException")
    })
    public Customer signIn(
        @WebParam(name = "arg0", targetNamespace = "")
        Bank arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2)
        throws FailedLoginException_Exception
    ;

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns WebServiceClient.Loan
     * @throws FailedLoginException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getLoan", targetNamespace = "http://bank", className = "WebServiceClient.GetLoan")
    @ResponseWrapper(localName = "getLoanResponse", targetNamespace = "http://bank", className = "WebServiceClient.GetLoanResponse")
    @Action(input = "http://bank/BankWebService/getLoanRequest", output = "http://bank/BankWebService/getLoanResponse", fault = {
        @FaultAction(className = FailedLoginException_Exception.class, value = "http://bank/BankWebService/getLoan/Fault/FailedLoginException")
    })
    public Loan getLoan(
        @WebParam(name = "arg0", targetNamespace = "")
        Bank arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        long arg3)
        throws FailedLoginException_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns WebServiceClient.Loan
     * @throws TransferException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "transferLoan", targetNamespace = "http://bank", className = "WebServiceClient.TransferLoan")
    @ResponseWrapper(localName = "transferLoanResponse", targetNamespace = "http://bank", className = "WebServiceClient.TransferLoanResponse")
    @Action(input = "http://bank/BankWebService/transferLoanRequest", output = "http://bank/BankWebService/transferLoanResponse", fault = {
        @FaultAction(className = TransferException_Exception.class, value = "http://bank/BankWebService/transferLoan/Fault/TransferException")
    })
    public Loan transferLoan(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        Bank arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        Bank arg2)
        throws TransferException_Exception
    ;

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @throws RecordNotFoundException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "delayPayment", targetNamespace = "http://bank", className = "WebServiceClient.DelayPayment")
    @ResponseWrapper(localName = "delayPaymentResponse", targetNamespace = "http://bank", className = "WebServiceClient.DelayPaymentResponse")
    @Action(input = "http://bank/BankWebService/delayPaymentRequest", output = "http://bank/BankWebService/delayPaymentResponse", fault = {
        @FaultAction(className = RecordNotFoundException_Exception.class, value = "http://bank/BankWebService/delayPayment/Fault/RecordNotFoundException")
    })
    public void delayPayment(
        @WebParam(name = "arg0", targetNamespace = "")
        Bank arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        XMLGregorianCalendar arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        XMLGregorianCalendar arg3)
        throws RecordNotFoundException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<WebServiceClient.CustomerInfo>
     * @throws FailedLoginException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCustomersInfo", targetNamespace = "http://bank", className = "WebServiceClient.GetCustomersInfo")
    @ResponseWrapper(localName = "getCustomersInfoResponse", targetNamespace = "http://bank", className = "WebServiceClient.GetCustomersInfoResponse")
    @Action(input = "http://bank/BankWebService/getCustomersInfoRequest", output = "http://bank/BankWebService/getCustomersInfoResponse", fault = {
        @FaultAction(className = FailedLoginException_Exception.class, value = "http://bank/BankWebService/getCustomersInfo/Fault/FailedLoginException")
    })
    public List<CustomerInfo> getCustomersInfo(
        @WebParam(name = "arg0", targetNamespace = "")
        Bank arg0)
        throws FailedLoginException_Exception
    ;

}
